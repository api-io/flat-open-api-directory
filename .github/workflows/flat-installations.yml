name: flat-installations
on:
  workflow_dispatch:
    inputs:
      installations_path: 
        required: true
        type: text
jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      
    steps:
      - uses: actions/checkout@v3

      - id: set-matrix
        run: |
          JSON=$(cat ./${{inputs.installations_path}})
          echo "::set-output name=matrix::${JSON//'%'/'%25'}"
          


  scheduled:
    environment: flat-api-app
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - run: |
          echo "${{toJson(matrix)}}" 
          echo "${{matrix.value.id}}" 

      # The first step is to check out the repository so it can read the files inside of it and do other operations
      - name: Check out repo
        uses: actions/checkout@v2
  
    # Genarates github app token 
      - name: Generate token
        id: generate_token
        uses: api-io/github-app-jwt@v1.2.4
        with:
          app_id: ${{ vars.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          installation_id: ${{ matrix.value.id }}
      - name: Print token
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
          AUTH: bearer ${{ steps.generate_token.outputs.authorization }}
        run: |
          echo "The generated token is masked: ${TOKEN} authorization: ${AUTH}"
     
      # This step installs Deno, which is a new Javascript runtime that improves on Node. 
      - name: Setup deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.x 

      # The step is a Flat Action step. We fetch the repositories who installed the app and save it as repositories.json
      - name: Fetch data 
        uses: githubocto/flat@v3
        env:
          AUTH:  ${{ steps.generate_token.outputs.authorization }}
        with:
          http_url: https://api.github.com/app/installation/repositories
          downloaded_filename: store/${{ vars.APP_ID }}/installations.json
          authorization: ${{ env.AUTH }}
    needs: [ setup ]
